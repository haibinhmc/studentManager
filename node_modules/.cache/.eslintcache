[{"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/index.js":"1","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/App.js":"2","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/reportWebVitals.js":"3","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/MainComponent.js":"4","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/configureStore.js":"5","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/StaffdetailComponent.js":"6","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/DepartmentdetailComponent.js":"7","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/HeaderComponents.js":"8","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/FooterComponents.js":"9","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/StaffListComponent.js":"10","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/DepartmentComponent.js":"11","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/SalaryComponent.js":"12","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/ActionCreators.js":"13","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/staffsSalary.js":"14","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/staffs.js":"15","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/ActionTypes.js":"16","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/shared/baseUrl.js":"17"},{"size":535,"mtime":1664966146116,"results":"18","hashOfConfig":"19"},{"size":417,"mtime":1663847080038,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1663825246034,"results":"21","hashOfConfig":"19"},{"size":4715,"mtime":1664966289561,"results":"22","hashOfConfig":"19"},{"size":547,"mtime":1664966547193,"results":"23","hashOfConfig":"19"},{"size":11598,"mtime":1664966322330,"results":"24","hashOfConfig":"19"},{"size":1837,"mtime":1664966230692,"results":"25","hashOfConfig":"19"},{"size":2409,"mtime":1664966274993,"results":"26","hashOfConfig":"19"},{"size":2765,"mtime":1664966254226,"results":"27","hashOfConfig":"19"},{"size":17472,"mtime":1664966337950,"results":"28","hashOfConfig":"19"},{"size":1829,"mtime":1664966200461,"results":"29","hashOfConfig":"19"},{"size":2472,"mtime":1664966307346,"results":"30","hashOfConfig":"19"},{"size":5948,"mtime":1664966516678,"results":"31","hashOfConfig":"19"},{"size":832,"mtime":1664966580880,"results":"32","hashOfConfig":"19"},{"size":1466,"mtime":1664966569299,"results":"33","hashOfConfig":"19"},{"size":739,"mtime":1664966530565,"results":"34","hashOfConfig":"19"},{"size":63,"mtime":1664966603140,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10e1mmm",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/index.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/App.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/reportWebVitals.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/MainComponent.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/configureStore.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/StaffdetailComponent.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/DepartmentdetailComponent.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/HeaderComponents.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/FooterComponents.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/StaffListComponent.js",["88","89","90","91"],[],"import React, { Component } from \"react\";\nimport {\n    Card,\n    CardImg,\n    CardBody,\n    CardSubtitle,\n    Button,\n    Modal,\n    Col,\n    Input,\n    ModalHeader,\n    ModalBody,\n    Row,\n    Label,\n    FormFeedback\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { FadeTransform } from \"react-animation-components\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\nconst isNumber = (val) => !isNaN(Number(val));\n\n// Presentational component (const) dùng để Render danh sách từng nhân viên\nconst RenderStaffItem = ({ staff, onDeleteStaff }) => {\n    return (\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: \"scale(0.5) translateY(-50%)\"\n            }}\n        >\n            <div>\n                <Link to={`/staff/${staff.id}`}>\n                    <Card>\n                        <CardImg width=\"100%\" src={staff.image} alt={staff.name} />\n                        <CardBody>\n                            <CardSubtitle>{staff.name}</CardSubtitle>\n                        </CardBody>\n                    </Card>\n                </Link>\n                <Button color=\"danger\" onClick={() => onDeleteStaff(staff.id)}>\n                    Delete\n                </Button>\n            </div>\n        </FadeTransform>\n    );\n};\n\n// Presentational component (const)\nclass StaffList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameF: \"\"\n        };\n        /* Ràng buộc 2 chiều đối với các hàm được khai báo bên dưới */\n        this.timNhanvien = this.timNhanvien.bind(this);\n    }\n\n    /* Hàm tìm kiếm từ khóa tên nhân viên và render ra kết quả tìm kiếm nhân viên  */\n    timNhanvien(event) {\n        const nameS = event.target.nameS.value;\n        event.preventDefault();\n        this.setState({ nameF: nameS });\n    }\n\n    render() {\n        const staffList = this.props.staffs\n            .filter((val) => {\n                if (this.state.nameF === \"\") return val;\n                else if (\n                    val.name.toLowerCase().includes(this.state.nameF.toLowerCase())\n                )\n                    return val;\n                return 0;\n            })\n            .map((val) => {\n                return (\n                    <div className=\"col-6 col-md-4 col-lg-2 mt-3 mb-3\" key={val.id}>\n                        <RenderStaffItem\n                            staff={val}\n                            onDeleteStaff={this.props.onDeleteStaff}\n                        />\n                    </div>\n                );\n            });\n\n        //Render giao diện Staff list\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6 mt-3\">\n                        <div className=\"row\">\n                            <div className=\"col-10 col-md-10\">\n                                <h3>Nhân viên</h3>\n                            </div>\n                            <AddStaffForm onAdd={this.props.onAddStaff} />\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-6 mt-3\">\n                        <form onSubmit={this.timNhanvien} className=\"form-group row\">\n                            <div className=\"col-8 col-md-8\">\n                                <input\n                                    type=\"text\"\n                                    name=\"nameS\"\n                                    className=\"form-control\"\n                                    placeholder=\"Tìm kiếm nhân viên ...\"\n                                />\n                            </div>\n                            <div className=\"col-4 col-md-4\">\n                                <button className=\"btn btn-primary\" type=\"submit\">\n                                    Tìm kiếm\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <hr />\n                </div>\n\n                <div className=\"row shadow mb-5 mt-5\">{staffList}</div>\n            </div>\n        );\n    }\n}\n\nclass AddStaffForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modalOpen: false,\n            doB: \"\",\n            startDate: \"\",\n            departmentId: \"Dept02\",\n            image: \"/assets/images/alberto.png\",\n            touched: {\n                doB: false,\n                startDate: false\n            }\n        };\n\n        /* Ràng buộc 2 chiều đối với các hàm được khai báo bên dưới */\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    /* Hàm xử lý trả touched về true sau khi người dùng không nhập gì mà thoát khỏi input text */\n    handleBlur = (field) => (evt) => {\n        this.setState({\n            touched: { ...this.state.touched, [field]: true }\n        });\n    };\n\n    /* Hàm xử lý việc nhập liệu vào ô input, thay đổi trạng thái dữ liệu */\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n    /* Hàm xử lý khi submit dữ liệu vào biểu mẫu */\n    handleSubmit = (value) => {\n        if (!this.state.doB || !this.state.startDate)\n            this.setState({\n                touched: { doB: true, startDate: true }\n            });\n        else {\n            const newStaff = {\n                name: value.name,\n                doB: this.state.doB,\n                salaryScale: parseInt(value.salaryScale, 10),\n                startDate: this.state.startDate,\n                image: \"/assets/images/alberto.png\",\n                departmentId: this.state.departmentId,\n                annualLeave: parseInt(value.annualLeave, 10),\n                overTime: parseInt(value.overTime, 10)\n            };\n\n            this.props.onAdd(newStaff);\n        }\n    };\n\n    /* Hàm kiểm tra ngày tháng có được nhập hay không */\n    validate(doB, startDate) {\n        const errors = {\n            doB: \"\",\n            startDate: \"\"\n        };\n\n        if (this.state.touched.doB && doB.length < 1) errors.doB = \"Yêu cầu nhập\";\n        if (this.state.touched.startDate && startDate.length < 1)\n            errors.startDate = \"Yêu cầu nhập\";\n\n        return errors;\n    }\n\n    /* Hàm Bật tắt Modal */\n    toggleModal(e) {\n        e.preventDefault();\n        this.setState({\n            modalOpen: !this.state.modalOpen\n        });\n    }\n\n    render() {\n        const errors = this.validate(this.state.doB, this.state.startDate); // Tạo biến báo lỗi khi người dùng khai báo thiếu\n        return (\n            <React.Fragment>\n                <div className=\"col-2 col-auto\">\n                    <Button outline onClick={this.toggleModal}>\n                        <span className=\"fa fa-plus fa-lg\"></span>\n                    </Button>\n                </div>\n                <Modal isOpen={this.state.modalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Thêm nhân viên</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(value) => this.handleSubmit(value)}>\n                            <Row className=\"control-group\">\n                                <Label htmlFor=\".name\" md={4}>\n                                    Tên\n                                </Label>\n                                <Col md={8}>\n                                    <Control.text\n                                        model=\".name\"\n                                        className=\"form-control\"\n                                        id=\".name\"\n                                        name=\"name\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(3),\n                                            maxLength: maxLength(30)\n                                        }}\n                                    />\n                                    <Errors\n                                        model=\".name\"\n                                        className=\"text-danger\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Yêu cầu  \",\n                                            minLength: \"nhập nhiều hơn 3 ký tự\",\n                                            maxLength: \"Yêu cầu nhập ít hơn 30 ký tự\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"control-group\">\n                                <Label htmlFor=\"doB\" md={4}>\n                                    Ngày sinh\n                                </Label>\n                                <Col md={8}>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"doB\"\n                                        id=\"doB\"\n                                        valid={errors.doB === \"\"}\n                                        invalid={errors.doB !== \"\"}\n                                        onBlur={this.handleBlur(\"doB\")}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <FormFeedback>{errors.doB}</FormFeedback>\n                                </Col>\n                            </Row>\n                            <Row className=\"control-group\">\n                                <Label htmlFor=\"startDate\" md={4}>\n                                    Ngày vào công ty\n                                </Label>\n                                <Col md={8}>\n                                    <Input\n                                        type=\"date\"\n                                        name=\"startDate\"\n                                        id=\"startDate\"\n                                        valid={errors.startDate === \"\"}\n                                        invalid={errors.startDate !== \"\"}\n                                        onBlur={this.handleBlur(\"startDate\")}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <FormFeedback>{errors.startDate}</FormFeedback>\n                                </Col>\n                            </Row>\n                            <Row className=\"control-group\">\n                                <Label htmlFor=\"department\" md={4}>\n                                    Phòng ban\n                                </Label>\n                                <Col md={8}>\n                                    <select\n                                        name=\"departmentId\"\n                                        id=\"department\"\n                                        className=\"form-control\"\n                                        value={this.state.departmentId}\n                                        onChange={(e) =>\n                                            this.setState({ departmentId: e.target.value })\n                                        }\n                                    >\n                                        <option value=\"Dept01\">Sale</option>\n                                        <option value=\"Dept02\">HR</option>\n                                        <option value=\"Dept03\">Marketing</option>\n                                        <option value=\"Dept04\">IT</option>\n                                        <option value=\"Dept05\">Finance</option>\n                                    </select>\n                                </Col>\n                            </Row>\n                            <Row className=\"control-group\">\n                                <Label htmlFor=\"salaryScale\" md={4}>\n                                    Hệ số lương\n                                </Label>\n                                <Col md={8}>\n                                    <Control.text\n                                        model=\".salaryScale\"\n                                        id=\"salaryScale\"\n                                        name=\"salaryScale\"\n                                        placeholder=\"1.0 -> 3.0\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                        defaultValue=\"1\"\n                                        className=\"form-control\"\n                                    />\n                                    <Errors\n                                        model=\".salaryScale\"\n                                        className=\"text-danger\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Yêu cầu nhập\",\n                                            isNumber: \"Phải là chữ số\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"control-group\">\n                                <Label htmlFor=\"annualLeave\" md={4}>\n                                    Số ngày nghỉ còn lại\n                                </Label>\n                                <Col md={8}>\n                                    <Control.text\n                                        model=\".annualLeave\"\n                                        id=\"annualLeave\"\n                                        name=\"annualLeave\"\n                                        defaultValue=\"0\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                        className=\"form-control\"\n                                    />\n                                    <Errors\n                                        model=\".annualLeave\"\n                                        className=\"text-danger\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Yêu cầu nhập\",\n                                            isNumber: \"Phải là chữ số\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"control-group\">\n                                <Label htmlFor=\"overTime\" md={4}>\n                                    Số ngày đã làm thêm\n                                </Label>\n                                <Col md={8}>\n                                    <Control.text\n                                        model=\".overTime\"\n                                        id=\"overTime\"\n                                        name=\"overTime\"\n                                        defaultValue=\"0\"\n                                        validators={{\n                                            required,\n                                            isNumber\n                                        }}\n                                        className=\"form-control\"\n                                    />\n                                    <Errors\n                                        model=\".overTime\"\n                                        className=\"text-danger\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Yêu cầu nhập\",\n                                            isNumber: \"Phải là chữ số\"\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"control-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"success\">\n                                        Thêm\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default StaffList;\n","/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/DepartmentComponent.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/Component/SalaryComponent.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/ActionCreators.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/staffsSalary.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/staffs.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/redux/ActionTypes.js",[],[],"/Volumes/Macintosh HD - Data 1/work/asm4/student_managerment/src/shared/baseUrl.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":232,"column":37,"nodeType":"94","messageId":"95","endLine":242,"endColumn":39},{"ruleId":"92","severity":1,"message":"93","line":316,"column":37,"nodeType":"94","messageId":"95","endLine":327,"endColumn":39},{"ruleId":"92","severity":1,"message":"93","line":344,"column":37,"nodeType":"94","messageId":"95","endLine":354,"endColumn":39},{"ruleId":"92","severity":1,"message":"93","line":371,"column":37,"nodeType":"94","messageId":"95","endLine":381,"endColumn":39},"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase"]